#!/usr/bin/env bash

# Get the current shell
s=$(ps -p $$ -o comm=)
if echo "$s" | grep -q "zsh"; then
    active_shell="zsh"
elif echo "$s" | grep -q "bash"; then
    active_shell="bash"
else
    active_shell="sh"
fi

# System aliases
alias c="clear"
alias e="exit"
alias h="history"
alias j="jobs"
alias g="git"

# Watch command every 1 second
alias wn="watch -n 1 "

# # Load hash directories
hash -d dot="$DOTFILES"
hash -d projects="$PROJECTS"
hash -d work="$PROJECTS/work"
hash -d personal="$PROJECTS/personal"

# # Quick access editor
alias edit='$EDITOR'
alias eenv='edit $DOTFILES/shell/env'

# Make and verify
alias mkpv="mkdir -pv"

# Quick reload of the shell
alias reload='$(which $active_shell)'
alias time_zsh="time zsh -i -c exit"

if has curl; then
    alias curl='curl -K $DOTFILES/curl/.curlrc'
fi

if has docker; then
    # Configure aliases
    alias d=docker
    alias dp="docker pull"
    alias dc=docker-compose
    alias dcp="docker-compose pull"
    alias dcup="docker-compose up -d"
    alias dcupf="docker-compose up -d --force-recreate"
    alias dcupfl="docker-compose up -d --force-recreate && docker-compose logs -f"
    alias dcdown="docker-compose down"
    alias dcdownv="docker-compose down -v"
    alias dcstop="docker-compose stop"
    alias dcrestart="docker-compose restart"
    alias dcrebuild="docker-compose up -d --build"
    alias dclogs="docker-compose logs -f"
    alias dcrecreate="docker-compose up -d --force-recreate --remove-orphans"
    alias dclean="docker-compose down -v && docker system prune --all --volumes --force"
fi

# if has asdf; then
#     # shorthand for asdf
#     alias a=asdf
#     complete -F _asdf a

#     # shorthand to list all installed plugins
#     alias aplist="asdf plugin-list"
#     complete -F _asdf__installed_plugins aplist

#     # shorthand to list all available plugins
#     alias apall="asdf plugin-list-all"
#     complete -F _asdf__available_plugins apall

#     # shorthand to list installed version of a package
#     alias available="asdf list"
#     complete -F _asdf__installed_versions_of available

#     # shorthand to list all available versions of a package
#     alias all="asdf list-all"
#     complete -F _asdf__list_all_versions all

#     alias add="asdf local"
#     complete -F _asdf__installed_versions_of add

#     # shorthand to install package
#     alias ainstall="asdf install"

#     # shorthand to add plugin
#     alias apadd="asdf plugin-add"
# fi

if has eza; then
    alias ls="eza --icons=auto --color=auto -h"
    alias l="eza --icons=auto --color=auto -h"
    alias la="eza --icons=auto --color=auto -h -T --git-ignore"
    alias ll="eza --icons=auto --color=auto -alh"
    alias lg="eza --icons=auto --color=auto -alh -T --git-ignore"
    alias lat="eza --icons=auto --color=auto -lh -T"
    alias llt="eza --icons=auto --color=auto -alh -T"
fi

if has kubectl; then
    alias k="kubectl --insecure-skip-tls-verify"
fi

if has navi; then
    alias n=navi
    alias np="navi --print"
fi

if has op; then
    export OP_ACCOUNT="my.1password.ca"
    export OP_ADDRESS="https://my.1password.ca"
    alias oplogin='eval $(op signin --account $OP_ACCOUNT)'
fi

if has python; then
    alias py=python
fi

if has terraform; then
    alias tf=terraform
    alias tfmt="terraform fmt"
    alias tfplan="terraform plan -out=/tmp/out.tfplan"
    alias tfapply="terraform apply /tmp/out.tfplan"
    alias tfdestroy="terraform destroy"
    alias tfdaa="terraform destroy -auto-approve"
    alias tfclean="rm -f /tmp/out.tfplan"
fi

if has tilt; then
    eval "$(tilt completion "$active_shell")"
fi

if has thefuck; then
	eval "$(thefuck --alias ffs)"
fi
