#!/usr/bin/env bash

layout_uv () {
    local PY_VERSION=${1:-3.13}
    if [[ -d ".venv" ]]; then
        VIRTUAL_ENV="$(pwd)/.venv"
    fi

    if [[ -z $VIRTUAL_ENV || ! -d $VIRTUAL_ENV ]]; then
        log_status "No virtual environment exists. Executing \`uv venv\` to create one."
        uv venv --python "$PY_VERSION" "$(pwd)/.venv"
        VIRTUAL_ENV="$(pwd)/.venv"
    fi

    PATH_add "$VIRTUAL_ENV/bin"
    export UV_ACTIVE=1  # or VENV_ACTIVE=1
    export VIRTUAL_ENV
}

use_oprc() {
    [[ -f .oprc ]] || return 0
    
    direnv_load op run --env-file .oprc --no-masking -- direnv dump
    # If you want to watch the .oprc file for changes
    watch_file .oprc
}

use_tfenv() {
    local TF_VERSION=${1:-}
    if [[ -z $TF_VERSION ]]; then
        if [[ -f .terraform-version ]]; then
            TF_VERSION=$(cat .terraform-version)
        else
            log_status "No terraform version specified and .terraform-version file not found."
            return 1
        fi
    fi

    if command -v tfenv >/dev/null 2>&1; then
        tfenv install "$TF_VERSION"
        tfenv use "$TF_VERSION"
    else
        log_status "tfenv is not installed or not in PATH."
        return 1
    fi
}

dotenv_if_exists